% k8s, kubernetes, kubectl

# Get pods by start time
k get pods  --sort-by='.status.startTime'

# Get running pods
k get pods --field-selector status.phase=Running

# Get nodes by creation time
k get nodes -o wide --sort-by=.metadata.creationTimestamp

# Get events with ID
k get events --sort-by='.lastTimestamp' --output='custom-columns=ID:.metadata.name,TYPE:.type,REASON:.reason,OBJECT:.involvedObject.name,NS:.involvedObject.namespace,MESSAGE:.message'

# Get events for a pod
k events --for pod/<pod>
$ pod: kubectl get pod --- --column 1 --prevent-extra

# Get pod resource requests and limits
k get pod -o=jsonpath='{range .items[*]}{.metadata.name}{"\t"}{..resources.requests}{"\t"}{..resources.limits}{"\n"}{end}' | awk '{printf "%-60s\t%-45s\t%-40s\t%s\n", $1,$2,$3,$4 }'

# View certificate
k view_secret <secret> <item> | openssl x509 -text -noout
$ secret: kubectl get secrets --no-headers --output custom-columns=":metadata.name" --field-selector='type=kubernetes.io/tls'
$ item: kubectl get secret <secret> -o yaml | yq -r '.data|keys|.[]'

# Clean up replicasets
k delete replicaset $(kubectl get replicaset -o jsonpath='{ .items[?(@.spec.replicas==0)].metadata.name }')

# Show AMI
k get nodeclaim -o=custom-columns="Name:.status.nodeName,Nodepool:.metadata.labels.karpenter\.sh/nodepool,AZ:.metadata.labels.topology\.kubernetes\.io/zone,Create:.metadata.creationTimestamp,AMI:.status.imageID"
